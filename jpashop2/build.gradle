plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5' // 라이브러리 버전 관리까지 해준다.
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'jpabook2'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral() // repositories mavenCentral에서 라이브러리를 다운받겠다는 설정
}

// 의존 관계 아까 선택했던 것들이 들어있다.
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web' // 얘가 필요한 라이브러리들을 다 가져온다.
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0' // 스부가 지원하지 않는 라이브러리들은 직접 라이브러리 버전 정보를 적어줘야 한다.

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'

    implementation('org.projectlombok:lombok')
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'


    testImplementation("org.junit.vintage:junit-vintage-engine") {
        exclude group: "org.hamcrest", module: "hamcrest-core"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
